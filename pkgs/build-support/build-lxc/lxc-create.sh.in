#! @shell@ -e

userDir=$1
shift
dir=$(@coreutils@/bin/dirname $userDir)
base=$(@coreutils@/bin/basename $userDir)
createInDir=$dir/$base

mkdir $createInDir
mkdir -p $createInDir/rootfs

for d in proc sys dev tmp sbin; do
    mkdir -p $createInDir/rootfs/$d
done

expr=$(printf '(lxcConfLib: dir: {conf = lxcConfLib.sequence [
  (lxcConfLib.setPath "rootfs" "%s/rootfs")
  (lxcConfLib.addMountEntry "proc %s/rootfs/proc proc nosuid,nodev,noexec 0 0")
  (lxcConfLib.addMountEntry "sysfs %s/rootfs/sys sysfs nosuid,nodev,noexec 0 0")
];})' $createInDir $createInDir $createInDir)

conf=$(printf '%s ['"$@"' '"$expr"' "%s"] %s' '(import @library@).buildLXCconf' '@out@' $createInDir \
  | @nix@/bin/nix-instantiate --eval-only - | @sed@/bin/sed "s/^\([\"']\)\(.*\)\1\$/\2/g")
printf "$conf" > $createInDir/lxc.conf

paths=$(printf '%s ['"$@"' %s] "%s"' '(import @library@).onCreate' '@out@' $createInDir \
        | @nix@/bin/nix-instantiate --show-trace --eval-only - | @sed@/bin/sed "s/^\([\"']\)\(.*\)\1\$/\2/g")
for p in $paths; do
  @shell@ -e -- $p $createInDir
done

init=$(printf '%s ['"$@"' %s] "%s"' '(import @library@).exec' '@out@' $createInDir \
  | @nix@/bin/nix-instantiate --eval-only - | @sed@/bin/sed "s/^\([\"']\)\(.*\)\1\$/\2/g")

@coreutils@/bin/ln -s $init $createInDir/rootfs/sbin/init
